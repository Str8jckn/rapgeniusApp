{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/Firefox.app/Contents/Project/Organika/src/components/Catalog/catalog.jsx\";\nimport React, { Component } from \"react\";\nimport Product from \"../Product/p1\";\nimport ProductService from \"../../services/productservice\";\n\nclass Catalog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      catagories: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: this.state.catagories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-category\",\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: this.state.products.map(p => /*#__PURE__*/_jsxDEV(Product, {\n          data: p\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    let service = new ProductService();\n    const data = service.getProducts();\n    let categories = [];\n\n    for (let i = 0; i < data.length; i++) {\n      var product = data[i];\n\n      if (!categories.includes(product.category)) {\n        categories.push(product.category);\n      }\n    }\n\n    this.setState({\n      products: data,\n      categories: categories\n    });\n  }\n\n}\n\nexport default Catalog;","map":{"version":3,"sources":["/Applications/Firefox.app/Contents/Project/Organika/src/components/Catalog/catalog.jsx"],"names":["React","Component","Product","ProductService","Catalog","state","products","catagories","render","map","cat","p","id","componentDidMount","service","data","getProducts","categories","i","length","product","includes","category","push","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,UAAU,EAAE;AAFN,KADsB;AAAA;;AAK9BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACG,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,GAAtB,CAA2BC,GAAD,iBACzB;AAAe,UAAA,SAAS,EAAC,cAAzB;AAAA,oBACGA;AADH,WAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACG,KAAKL,KAAL,CAAWC,QAAX,CAAoBG,GAApB,CAAyBE,CAAD,iBACvB,QAAC,OAAD;AAAoB,UAAA,IAAI,EAAEA;AAA1B,WAAcA,CAAC,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAO,GAAG,IAAIX,cAAJ,EAAd;AACA,UAAMY,IAAI,GAAGD,OAAO,CAACE,WAAR,EAAb;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIE,OAAO,GAAGL,IAAI,CAACG,CAAD,CAAlB;;AAEA,UAAI,CAACD,UAAU,CAACI,QAAX,CAAoBD,OAAO,CAACE,QAA5B,CAAL,EAA4C;AAC1CL,QAAAA,UAAU,CAACM,IAAX,CAAgBH,OAAO,CAACE,QAAxB;AACD;AACF;;AAED,SAAKE,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAES,IAAZ;AAAkBE,MAAAA,UAAU,EAAEA;AAA9B,KAAd;AACD;;AAtC6B;;AAyChC,eAAeb,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Product from \"../Product/p1\";\nimport ProductService from \"../../services/productservice\";\n\nclass Catalog extends Component {\n  state = {\n    products: [],\n    catagories: [],\n  };\n  render() {\n    return (\n      <div className=\"catalog-page\">\n        <div className=\"categories\">\n          {this.state.catagories.map((cat) => (\n            <div key={cat} className=\"btn-category\">\n              {cat}\n            </div>\n          ))}\n        </div>\n        <div className=\"products\">\n          {this.state.products.map((p) => (\n            <Product key={p.id} data={p}></Product>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let service = new ProductService();\n    const data = service.getProducts();\n    let categories = [];\n\n    for (let i = 0; i < data.length; i++) {\n      var product = data[i];\n\n      if (!categories.includes(product.category)) {\n        categories.push(product.category);\n      }\n    }\n\n    this.setState({ products: data, categories: categories });\n  }\n}\n\nexport default Catalog;\n"]},"metadata":{},"sourceType":"module"}